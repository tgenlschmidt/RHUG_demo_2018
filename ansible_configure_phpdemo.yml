---
- hosts: localhost
  become: false
  gather_facts: false
  vars_files:
   - aws.yml
  tasks:
   - name: Create a webserver instance in AWS
     ec2:
      aws_access_key: "{{ AWS_ACCESS_KEY }}"
      aws_secret_key: "{{ AWS_SECRET_KEY }}"
      key_name: ausov
      instance_type: t2.micro
      image: ami-26ebbc5c
      instance_tags:
        Name: "{{ NAME }}-web"
        Type: Linux_AWS
      wait: true
      group: default
      exact_count: 1
      count_tag: foo
      vpc_subnet_id: subnet-c86b14e2
      assign_public_ip: yes
      region: us-east-1
     register: ec2_web

   - name: Create a database instance in AWS
     ec2:
      aws_access_key: "{{ AWS_ACCESS_KEY }}"
      aws_secret_key: "{{ AWS_SECRET_KEY }}"
      key_name: ausov
      instance_type: t2.micro
      image: ami-26ebbc5c
      instance_tags:
        Name: "{{ NAME }}-db"
        Type: Linux_AWS
      wait: true
      group: default
      exact_count: 1
      count_tag: foo
      vpc_subnet_id: subnet-c86b14e2
      assign_public_ip: yes
      region: us-east-1
     register: ec2_db

   - debug: var=ec2_db
   - debug: var=ec2_web
   - debug: msg="Adding host {{ ec2_web.instances[0].dns_name }} and {{ ec2_db.instances[0].dns_name }}"

   - name: Adding Web server to inventory {{ec2_web.instances[0].dns_name}}
     add_host:
      name: "{{ ec2_web.instances[0].dns_name }}"
      group: webservers
      dbhost: "{{ ec2_db.instances[0].dns_name  }}"

   - name: Adding DB server to inventory {{ ec2_db.instances[0].dns_name }}
     add_host:
      name: "{{ ec2_db.instances[0].dns_name }}"
      group: dbservers

   - name: Wait for hosts to come up
     wait_for: 
      port: 22
      host: "{{ item }}"
      search_regex: OpenSSH
     delay: 60
     with_items:
      - "{{ ec2_web.instances[0].dns_name }}"
      - "{{ ec2_db.instances[0].dns_name  }}"

   - name: Set variables
     set_fact:
      dbserver_address: "{{ ec2_db.instances[0].dns_name }}"
      webserver_address: "{{ ec2_web.instances[0].dns_name }}"

   - name: Set DNS for external access
     route53:
      aws_access_key: "{{ AWS_ACCESS_KEY }}"
      aws_secret_key: "{{ AWS_SECRET_KEY }}"
      record: "{{ NAME }}.demo.li9.com"
      state: present
      type: A
      zone: demo.li9.com
      ttl: 300
      overwrite: yes
      value: "{{ ec2_web.instances[0].public_ip }}"

- hosts: all
  become: true
  gather_facts: false
  tasks:
   - name: set hostname
     hostname: name={{inventory_hostname}}


- import_playbook: ansible_dbserver.yml 
- import_playbook: ansible_webserver.yml

